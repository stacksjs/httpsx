---
description: General information based on the latest ./README.md content
globs: 
---
Update it if APIs change:

# httx

> httx is a simple, fast, lightweight and user-friendly API client. Whether you are working with a CLI, a library or a server, httx is a perfect choice for making HTTP requests.

<p align="center"><img src="https://github.com/stacksjs/httx/blob/main/.github/art/screenshot.png?raw=true" alt="Screenshot of httx"></p>

## Features

- 🌐 **API Requests**: _easily make API requests in a familiar way_
- 🤖 **CLI**: _a cross-platform CLI_
- 📚 **Library**: _use httx as a library in your project_
- ⚡ **Performant**: _extremely fast and efficient_
- 🪶 **Lightweight**: _built on web standards, lightweight & without dependencies_
- 🐶 **User-Friendly**: _user-friendly, simple, powerful API_
- 💪🏽 **Type-Safe**: _strongly-typed, including type-safe errors_

## Install

```bash
bun install -d @stacksjs/httx
```

<!-- _Alternatively, you can install:_

```bash
brew install httx # wip
pkgx install httx # wip
``` -->

> [!NOTE]
> We are trying to release under the `httx` package name, which is currently abandoned. Please @npmjs, we would love to!🙏🏽

## Get Started

Making requests is simple. There are two ways of getting started: _as a library or as a CLI._

### Library

Given the npm package is installed:

```ts
import type { HttxConfig } from 'httx'
// import { ... } from 'httx'

// ...
```

In case you are trying to start multiple proxies, you may use this configuration:

### CLI

```bash
httx get api.example.com/users
httx post api.example.com/users name=john email=john@example.com -j
httx get api.example.com/files file@./data.txt -m
httx get api.example.com/secure -a username:password

httx --help
httx --version
```

## Configuration

The Reverse Proxy can be configured using a `httx.config.ts` _(or `httx.config.js`)_ file and it will be automatically loaded when running the `reverse-proxy` command.

```ts
// httx.config.{ts,js}
import type { HttxOptions } from '@stacksjs/httx'
import os from 'node:os'
import path from 'node:path'

const config: HttxOptions = {
  verbose: false,
}

export default config
```

_Then run:_

```bash
./httx
```

To learn more, head over to the [documentation](mdc:https:/httx.netlify.app).
